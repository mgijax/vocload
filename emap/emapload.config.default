#format: sh
#
#  Configuration for emapload
#
#  This file sets up environment variables that are needed for a
# 	EMAPA/EMAPS load
#
###########################################################################

#
#  If the MGICONFIG environment variable does not have a local override,
#  use the default "live" settings.
#
if [ "${MGICONFIG}" = "" ]
then
    MGICONFIG=/usr/local/mgi/live/mgiconfig
    export MGICONFIG
fi

CONFIG_MASTER=${MGICONFIG}/master.config.sh

export CONFIG_MASTER

. ${CONFIG_MASTER}

. ${VOCLOAD}/Configuration

###########################################################################
#
#  LOAD SPECIFIC SETTINGS
#
###########################################################################

# Full path the the input, output, logs, reports, and archive directories 
FILEDIR=${DATALOADSOUTPUT}/mgi/vocload/emap
INPUTDIR=${FILEDIR}/input
LOGDIR=${FILEDIR}/logs
RPTDIR=${FILEDIR}/reports
OUTPUTDIR=${FILEDIR}/output
ARCHIVEDIR=${FILEDIR}/archive

export INPUTDIR FILEDIR LOGDIR RPTDIR OUTPUTDIR ARCHIVEDIR

DAG_ROOT_ID="EMAPA:0"
export DAG_ROOT_ID
ANNOT_TYPE_KEY=0        # EMAPA terms are not stored in VOC_Annot
export ANNOT_TYPE_KEY

#
# Sanity check settings
#

# Full path to the sanity check log.
QC_LOGFILE=${LOGDIR}/emapQC.log

# Full path to the fatal sanity check report.
QC_RPT=${RPTDIR}/emapFatalQC.rpt

# Full path to the warning sanity check report
QC_WARN_RPT=${RPTDIR}/emapWarningQC.rpt

# Full path to the sanity check wrapper
LOAD_SANITY=${VOCLOAD}/emap/sanity.sh

# Full path to QC script.
LOAD_QC=${VOCLOAD}/emap/emapQC.sh

export QC_LOGFILE QC_RPT QC_WARN_RPT LOAD_SANITY LOAD_QC

# Full path to intermediate dup ID report
DUP_IDS_RPT=${OUTPUTDIR}/dupId.txt

# Full path to intermediate invalid TS report
INVALID_TS_RPT=${OUTPUTDIR}/invalidTS.txt

# Full path to the intermediate missing field report
MISSING_FIELD_RPT=${OUTPUTDIR}/missingField.txt

# Full path to the intermediate invalid EMAPA ID report
INVALID_ID_RPT=${OUTPUTDIR}/invalidId.txt

# Full path to the intermediate file containing number of terms if  
# < MIN_TERMS_EXPECTED 
MIN_TERMS_RPT=${OUTPUTDIR}/minTerms.txt

# Full path to the intermediate file containing parent ids that are not defined
UNDEFINED_PARENT_RPT=${OUTPUTDIR}/undefinedParent.txt

# Full path to the  intermediate file containing alt ids which are also primary
ALT_IS_PRIMARY_RPT=${OUTPUTDIR}/altIsPrimary.txt

# Full path to the  intermediate file containing obsolete ids which are parents
OBS_IS_PARENT_RPT=${OUTPUTDIR}/obsIsParent.txt

# Full path to the  intermediate file containing obsolete ids with relationships
OBS_WITH_RELATIONSHIP_RPT=${OUTPUTDIR}/obsWithRelationship.txt

# Full path to the intermediate file containing list of ids in the database
# but not in the input file
TERM_IN_DB_NOTIN_INPUT_RPT=${OUTPUTDIR}/inDbNotInInput.txt

# Full path the the intermediate file containing list if ids from the obo 
# file that have tabs in their stanzas
STANZA_HAS_TAB_RPT=${OUTPUTDIR}/stanzaHasTab.txt

export DUP_IDS_RPT INVALID_TS_RPT MISSING_FIELD_RPT
export INVALID_ID_RPT MIN_TERMS_RPT UNDEFINED_PARENT_RPT ALT_IS_PRIMARY_RPT
export OBS_IS_PARENT_RPT OBS_WITH_RELATIONSHIP_RPT TERM_IN_DB_NOTIN_INPUT_RPT
export STANZA_HAS_TAB_RPT

#
# Inputs
#
# full path to the default input file
INPUT_FILE_DEFAULT=${INPUTDIR}/EMAPA.obo

export INPUT_FILE_DEFAULT

#
# Outputs
#

#  Full path name of the log files
LOG_PROC=${LOGDIR}/emapload.proc.log
LOG_DIAG=${LOGDIR}/emapload.diag.log
LOG_CUR=${LOGDIR}/emapload.cur.log
LOG_VAL=${LOGDIR}/emapload.val.log
LOG_EMAP_TERMDAG=${LOGDIR}/emapTermDag.log

export LOG_PROC LOG_DIAG LOG_CUR LOG_VAL LOG_EMAP_TERMDAG

# EMAPA output files

# term and dag output files
EMAPA_TERM_FILE=${OUTPUTDIR}/Termfile.emapa
EMAPA_DAG_FILE=${OUTPUTDIR}/dag.emapa

export EMAPA_TERM_FILE EMAPA_DAG_FILE 

# EMAPS output files
EMAPS_TERM_FILE=${OUTPUTDIR}/Termfile.emaps
EMAPS_DAG_FILE=${OUTPUTDIR}/dag.emaps

export EMAPS_TERM_FILE EMAPS_DAG_FILE

# EMAPA BCP log and error files
BCP_LOG_FILE="${LOGDIR}/bcpLog.a.bcp"
BCP_ERROR_FILE="${LOGDIR}/bcpError.a.bcp"

export BCP_LOG_FILE BCP_ERROR_FILE

# EMAPA BCP log and error files
BCP_S_LOG_FILE="${LOGDIR}/bcpLog.s.bcp"
BCP_S_ERROR_FILE="${LOGDIR}/bcpError.s.bcp"

export BCP_S_LOG_FILE BCP_S_ERROR_FILE

# EMAPA DAG BCP Files
DAG_EDGE_BCP_FILE="${OUTPUTDIR}/DAG_Edge.a.bcp"
DAG_NODE_BCP_FILE="${OUTPUTDIR}/DAG_Node.a.bcp"
DAG_CLOSURE_BCP_FILE="${OUTPUTDIR}/DAG_Closure.a.bcp"

export DAG_EDGE_BCP_FILE DAG_NODE_BCP_FILE DAG_CLOSURE_BCP_FILE

# EMAPS DAG BCP Files
DAG_EDGE_S_BCP_FILE="${OUTPUTDIR}/DAG_Edge.s.~.bcp"
DAG_NODE_S_BCP_FILE="${OUTPUTDIR}/DAG_Node.s.~.bcp"
DAG_CLOSURE_S_BCP_FILE="${OUTPUTDIR}/DAG_Closure.s.~.bcp"

export DAG_EDGE_S_BCP_FILE DAG_NODE_S_BCP_FILE DAG_CLOSURE_S_BCP_FILE

# EMAPA bcp files
TERM_TERM_BCP_FILE=${OUTPUTDIR}/VOC_Term.a.bcp
TERM_NOTE_BCP_FILE=${OUTPUTDIR}/MGI_Note.a.bcp
TERM_SYNONYM_BCP_FILE=${OUTPUTDIR}/MGI_Synonym.a.bcp
ACCESSION_BCP_FILE=${OUTPUTDIR}/ACC_Accession.a.bcp
TERM_EMAPA_TS_BCP_FILE=${OUTPUTDIR}/VOC_Term_EMAPA.bcp

export TERM_TERM_BCP_FILE TERM_NOTE_BCP_FILE 
export TERM_SYNONYM_BCP_FILE ACCESSION_BCP_FILE
export TERM_EMAPA_TS_BCP_FILE

# EMAPA bcp files
TERM_TERM_S_BCP_FILE=${OUTPUTDIR}/VOC_Term.s.bcp
TERM_NOTE_S_BCP_FILE=${OUTPUTDIR}/MGI_Note.s.bcp
TERM_SYNONYM_S_BCP_FILE=${OUTPUTDIR}/MGI_Synonym.s.bcp
ACCESSION_S_BCP_FILE=${OUTPUTDIR}/ACC_Accession.s.bcp
TERM_EMAPS_TS_BCP_FILE=${OUTPUTDIR}/VOC_Term_EMAPS.bcp

export TERM_TERM_S_BCP_FILE TERM_NOTE_S_BCP_FILE
export TERM_SYNONYM_S_BCP_FILE ACCESSION_S_BCP_FILE
export TERM_EMAPS_TS_BCP_FILE

# EMAPA Discrepancy File
DISCREP_FILE=${LOGDIR}/termDiscrepancy.a.html
DAG_DISCREP_FILE=${LOGDIR}/dagDiscrepancy.a.html

export DISCREP_FILE DAG_DISCREP_FILE

# EMAPS Discrepancy File
DISCREP_S_FILE=${LOGDIR}/termDiscrepancy.s.html

# ~ will be dynamically replaced with theiler stage
DAG_DISCREP_S_FILE=${LOGDIR}/dagDiscrepancy.s.~.html

export DISCREP_S_FILE DAG_DISCREP_S_FILE

# VOC_Term MGI Type Key
MGITYPE=13

# note type - private vocab term comment
VOCAB_COMMENT_KEY=1001

export MGITYPE VOCAB_COMMENT_KEY

# change turns out keys don't work
EMAPA_VOCAB_KEY=EMAPA
EMAPS_VOCAB_KEY=EMAPS
REFS_KEY=202491

export EMAPA_VOCAB_KEY EMAPS_VOCAB_KEY REFS_KEY

###########################################################################
#
#  MISCELLANEOUS SETTINGS
#
###########################################################################

# EMAP Slim  load lastrun file
SLIM_LASTRUN=${DATALOADSOUTPUT}/mgi/slimtermload/emapslimload/input/lastrun
export SLIM_LASTRUN

# the obo version expected by the load. A change of version requires load
# changeS
OBO_FILE_VERSION=1.2

export OBO_FILE_VERSION

# Valid Theiler Stage range
TS_START=1
TS_END=28

export TS_START TS_END

# minimum number of terms expected in the input file for sanity check
MIN_TERMS_EXPECTED=5000

export MIN_TERMS_EXPECTED

# this load's login value for DB table CreatedBy and ModifiedBy
JOBSTREAM=emapload

export JOBSTREAM

#  The name of the load for the subject of an email notification
# will be set by wrapper based on collection for each load
MAIL_LOADNAME="EMAPA/EMAPS Load"

export MAIL_LOADNAME

#  INSTALLDIR expected by dlautils/DLAInstall
INSTALLDIR=${VOCLOAD}

export INSTALLDIR

